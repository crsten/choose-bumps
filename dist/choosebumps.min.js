"use strict";function ChooseBumps(e,t){function n(){this.element=e,x.classList.add("choosebumps"),x.setAttribute("tabindex",0),g(),S.call(this,t||{})}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(A=e,void x.querySelector(".cb-main-item").setAttribute("placeholder",A))}function c(e){O=!!e,O&&"object"===("undefined"==typeof w?"undefined":_typeof(w))&&w&&(w=[w])}function i(e){e===!0?(y(),x.classList.add("cb-active"),C.scrollTop=0,document.addEventListener("click",i),document.addEventListener("keydown",o),h(),T=!0):(m(),x.classList.remove("cb-active"),document.removeEventListener("click",i),document.removeEventListener("keydown",o),N=null,T=!1)}function o(e){switch(new RegExp("38|40|13").test(e.keyCode)&&e.preventDefault(),e.keyCode){case 38:e.preventDefault(),u();break;case 40:e.preventDefault(),s();break;case 13:d(M[parseInt(C.children[N].getAttribute("data-id"),10)]),N=null}}function l(e,t){t.stopPropagation(),w.splice(w.indexOf(e),1),w.length||(w=null),w||x.querySelector(".cb-main-item").classList.add("cb-placeholder"),b(),y()}function s(){null===N&&(N=-1);var e=C.children.length-1;N=e>N?N+1:e,f()}function u(){C.children.length-1;N=N?N-1:null,f()}function a(){if(N&&!(0>N)){var e=C.children[N],t=C.scrollTop,n=C.scrollTop+C.clientHeight,r=e.offsetTop,c=e.offsetTop+e.clientHeight;t>r?C.scrollTop=e.offsetTop:c>n&&(C.scrollTop=c-C.clientHeight)}}function f(){var e=C.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=C.children[N];t&&t.classList.add("cb-selected"),a()}function d(e,t){x.querySelector(".cb-main-item").classList.remove("cb-placeholder"),m(),O?(w&&w.indexOf(e)<0?w.push(e):w=[e],y(),t&&t.stopPropagation(),h()):(w=e,i(!1)),P&&P(e),b()}function p(e){if(k=!!e){x.classList.add("cb-search-enabled");var t=document.createElement("input");t.className="cb-search",t.setAttribute("type","text"),t.setAttribute("size",1),t.setAttribute("autocomplete","off"),t.addEventListener("keyup",function(e){new RegExp("38|40|13").test(e.keyCode)===!1&&(y(v(this.value)),N=null,s())}),t.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),x.querySelector(".cb-main-item").appendChild(t)}else x.classList.remove("cb-search-enabled")}function m(){k&&(x.querySelector(".cb-search").value="")}function h(){k&&x.querySelector(".cb-search").focus()}function v(e){function t(e){return Object.keys(e).reduce(function(r,c){var i=!1;return i="object"===_typeof(e[c])?t(e[c]):n.test(e[c]),i&&(r=!0),r},!1)}if(!e)return M;var n=new RegExp(e,"i");return M.filter(function(e){if(q){var r=!1;return q.split(" ").forEach(function(t){var c=t.split("."),i=c.reduce(function(e,t){return e[t]},e);n.test(i)&&(r=!0)}),r}return"string"==typeof e?n.test(e):t(e)})}function g(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512" height="20" width="20">\n						<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n					</svg>';e.innerHTML+=t,x.appendChild(e),C=document.createElement("div"),C.className="cb-items",x.appendChild(C),x.querySelector(".cb-main-item").addEventListener("click",function(e){e.stopPropagation(),i(!T)})}function b(){var e=x.querySelector(".cb-main-item");if(O){if([].slice.call(x.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),!w)return;w.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=E(t,H||B)+'<svg viewBox="0 0 512 512">\n						<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n					</svg>',n.querySelector("svg").addEventListener("click",l.bind(null,t)),e.insertBefore(n,e.children[e.children.length-1])})}else{if(!w)return;var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=E(w,z||B);var n=x.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}function y(e){C.innerHTML="",j&&(M=M.sort(function(e,t){return L(j,e)<L(j,t)?-1:L(j,e)>L(j,t)?1:0}));var t=null;M.forEach(function(n,r){if(!(e&&e.indexOf(n)<0||O&&w&&w.indexOf(n)>-1||!O&&w===n)){var c=document.createElement("div");c.setAttribute("data-id",r),c.innerHTML=E(n,B),c.addEventListener("click",d.bind(null,n)),!j||t&&L(j,t)===L(j,n)||c.setAttribute("category",L(j,n)),t=n,C.appendChild(c)}})}function E(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var c="",i=e;r[1]&&(c="."+r[1],i=L(r[1],e));var o=new RegExp("{{data"+c+"}}");t=t.replace(o,i)}return t}function L(e,t){return e.split(".").reduce(function(e,t){return e[t]},t)}function S(e){for(var t in _)this[t]=e[t]?e[t]:_[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var x=null,C=null,k=!1,w=null,T=!1,q=null,A=null,O=!1,j=null,B="",H=null,z=null,N=null,P=null,M=[],_={placeholder:"Choose",items:[],search:!1,searchfields:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null,categorize:null,onselect:null};return Object.defineProperties(this,{element:{get:function(){return x},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?x=t:console.error("Element not found.")}else e instanceof HTMLElement?x=e:console.error("Invalid argument")}},items:{get:function(){return M},set:function(e){e instanceof Array?M=e:console.error("Items must be an array.")}},search:{get:function(){return k},set:p},placeholder:{get:function(){return A},set:r},multiple:{get:function(){return O},set:c},selected:{get:function(){return w}},template:{get:function(){return B},set:function(e){"string"==typeof e?(B=e,y(),b()):console.error("Template must be a string.")}},tagtemplate:{get:function(){return H||B},set:function(e){"string"==typeof e&&(H=e,y(),b())}},selectedtemplate:{get:function(){return z||B},set:function(e){"string"==typeof e&&(z=e,y(),b())}},searchfields:{get:function(){return q},set:function(e){"string"==typeof e?q=e:console.error("SearchFields must be a string.")}},onselect:{get:function(){return P},set:function(e){"function"==typeof e?P=e:e||(P=null)}},categorize:{get:function(){return j},set:function(e){j="string"==typeof e?e:null,y()}}}),this.select=function(e){function t(e,t){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))&&"object"!==("undefined"==typeof t?"undefined":_typeof(t)))return e===t;var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var c=0;c<n.length;c++){var i=n[c];if(e[i]!==t[i])return!1}return!0}var n=M.reduce(function(n,r){return n=t(e,r)?r:n},null);n&&d(n)},n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNob29zZWJ1bXBzLmpzIl0sIm5hbWVzIjpbIkNob29zZUJ1bXBzIiwiZWxlbWVudCIsIm9wdGlvbnMiLCJpbml0IiwidGhpcyIsIkVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJyZW5kZXJIVE1MIiwic2V0QXJncyIsImNhbGwiLCJzZXRQbGFjZWhvbGRlciIsIngiLCJjb25zb2xlIiwiZXJyb3IiLCJQbGFjZWhvbGRlciIsInF1ZXJ5U2VsZWN0b3IiLCJzZXRNdWx0aXBsZSIsInN0YXRlIiwiTXVsdGlwbGUiLCJTZWxlY3RlZCIsIl90eXBlb2YiLCJzZXRPcGVuZWQiLCJyZW5kZXJJdGVtcyIsIkl0ZW1Db250YWluZXIiLCJzY3JvbGxUb3AiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJBcnJvd05hdmlnYXRpb24iLCJmb2N1c1NlYXJjaCIsImlzT3BlbiIsInJlc2V0U2VhcmNoIiwicmVtb3ZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlNlbGVjdGVkSW5kZXgiLCJlIiwiUmVnRXhwIiwidGVzdCIsImtleUNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsInNlbGVjdFByZXYiLCJzZWxlY3ROZXh0Iiwic2VsZWN0SXRlbSIsIkl0ZW1zIiwicGFyc2VJbnQiLCJjaGlsZHJlbiIsImdldEF0dHJpYnV0ZSIsInJlbW92ZVNlbGVjdGVkIiwiaXRlbSIsImV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwic3BsaWNlIiwiaW5kZXhPZiIsImxlbmd0aCIsInJlbmRlclNlbGVjdGlvbiIsIm1heCIsInVwZGF0ZVNlbGVjdGlvbiIsInNjcm9sbFNlbGVjdGVkSW50b1ZpZXciLCJzZWxlY3RlZEl0ZW0iLCJjb250YWluZXJUb3AiLCJjb250YWluZXJCb3R0b20iLCJjbGllbnRIZWlnaHQiLCJzZWxlY3RlZEl0ZW1Ub3AiLCJvZmZzZXRUb3AiLCJzZWxlY3RlZEl0ZW1Cb3R0b20iLCJvbGRTZWxlY3Rpb24iLCJlbCIsInB1c2giLCJvblNlbGVjdCIsInNldFNlYXJjaCIsIlNlYXJjaCIsIlNlYXJjaEJveCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJzZWFyY2giLCJ2YWx1ZSIsImFwcGVuZENoaWxkIiwiZm9jdXMiLCJxdWVyeSIsInNlYXJjaE9iamVjdCIsIm9iaiIsIk9iamVjdCIsImtleXMiLCJyZWR1Y2UiLCJ2YWwiLCJrZXkiLCJjaGVjayIsInJlZ2V4IiwiZmlsdGVyIiwiU2VhcmNoRmllbGRzIiwic3BsaXQiLCJmb3JFYWNoIiwiZmllbGQiLCJNYWluSXRlbSIsIkNhcmV0IiwiaW5uZXJIVE1MIiwibWFpbkl0ZW0iLCJzbGljZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0IiwicmVtb3ZlQ2hpbGQiLCJ0YWciLCJwYXJzZVRlbXBsYXRlIiwiVGFnVGVtcGxhdGUiLCJUZW1wbGF0ZSIsImJpbmQiLCJpbnNlcnRCZWZvcmUiLCJTZWxlY3RlZFRlbXBsYXRlIiwicHJldmlvdXNJdGVtIiwiaXRlbXMiLCJDYXRlZ29yaXplIiwic29ydCIsImEiLCJiIiwiZ2V0UHJvcGVydHlCeVN0cmluZyIsImluZGV4Iiwib3B0aW9uIiwiZGF0YSIsInRlbXBsYXRlIiwicmUiLCJtIiwiZXhlYyIsInNlbGVjdG9yIiwicmVwbGFjZSIsIm9iamVjdCIsIm9wdHMiLCJkZWZhdWx0cyIsInBsYWNlaG9sZGVyIiwic2VhcmNoZmllbGRzIiwibXVsdGlwbGUiLCJ0YWd0ZW1wbGF0ZSIsInNlbGVjdGVkdGVtcGxhdGUiLCJjYXRlZ29yaXplIiwib25zZWxlY3QiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZ2V0Iiwic2V0IiwiSFRNTEVsZW1lbnQiLCJBcnJheSIsInNlbGVjdGVkIiwic2VsZWN0IiwiaXNFcXVpdmFsZW50IiwiYVByb3BzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImJQcm9wcyIsImkiLCJwcm9wTmFtZSIsIm1hdGNoIiwiZnJlZXplIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsImZhY3RvcnkiLCJkZWZpbmUiLCJh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SCxFQUNwREssT0FBTzlKLFlBQWN5SixHQUMzQnpKIiwiZmlsZSI6ImNob29zZWJ1bXBzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLyogIENob29zZUJ1bXBzXHJcbiAqICBBIGRyb3Bkb3duIHNvIHNpbXBsZSBpdCB3aWxsIGdpdmUgeW91IGNob29zZS1idW1wcyFcclxuICogIEF1dGhvcjogY2FyLmphY29ic2VuQGdtYWlsLmNvbVxyXG4gKiAgTGljZW5zZTogTUlUXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gQ2hvb3NlQnVtcHMoZWxlbWVudCxvcHRpb25zKSB7XHJcblx0aWYodGhpcyBpbnN0YW5jZW9mIENob29zZUJ1bXBzID09PSBmYWxzZSkgcmV0dXJuIG5ldyBDaG9vc2VCdW1wcyhlbGVtZW50LG9wdGlvbnMpO1xyXG5cclxuXHRsZXQgRWxlbWVudCA9IG51bGw7XHJcblx0bGV0IEl0ZW1Db250YWluZXIgPSBudWxsO1xyXG5cdGxldCBTZWFyY2ggPSBmYWxzZTtcclxuXHRsZXQgU2VsZWN0ZWQgPSBudWxsO1xyXG5cdGxldCBpc09wZW4gPSBmYWxzZTtcclxuXHRsZXQgU2VhcmNoRmllbGRzID0gbnVsbDtcclxuXHRsZXQgUGxhY2Vob2xkZXIgPSBudWxsO1xyXG5cdGxldCBNdWx0aXBsZSA9IGZhbHNlO1xyXG5cdGxldCBDYXRlZ29yaXplID0gbnVsbDtcclxuXHRsZXQgVGVtcGxhdGUgPSAnJztcclxuXHRsZXQgVGFnVGVtcGxhdGUgPSBudWxsO1xyXG5cdGxldCBTZWxlY3RlZFRlbXBsYXRlID0gbnVsbDtcclxuXHRsZXQgU2VsZWN0ZWRJbmRleCA9IG51bGw7XHJcblx0bGV0IG9uU2VsZWN0ID0gbnVsbDtcclxuXHRsZXQgSXRlbXMgPSBbXTtcclxuXHJcblx0bGV0IGRlZmF1bHRzID0ge1xyXG5cdFx0cGxhY2Vob2xkZXI6ICdDaG9vc2UnLFxyXG5cdFx0aXRlbXM6IFtdLFxyXG5cdFx0c2VhcmNoOiBmYWxzZSxcclxuXHRcdHNlYXJjaGZpZWxkczogJycsXHJcblx0XHRtdWx0aXBsZTogZmFsc2UsXHJcblx0XHR0ZW1wbGF0ZTogJ3t7ZGF0YX19JyxcclxuXHRcdHRhZ3RlbXBsYXRlOiBudWxsLFxyXG5cdFx0c2VsZWN0ZWR0ZW1wbGF0ZTogbnVsbCxcclxuXHRcdGNhdGVnb3JpemU6IG51bGwsXHJcblx0XHRvbnNlbGVjdDogbnVsbFxyXG5cdH07XHJcblxyXG5cdGZ1bmN0aW9uIGluaXQoKSB7XHJcblx0XHR0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG5cdFx0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjaG9vc2VidW1wcycpO1xyXG5cdFx0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywwKTtcclxuXHRcdHJlbmRlckhUTUwoKTtcclxuXHRcdFxyXG5cdFx0c2V0QXJncy5jYWxsKHRoaXMsb3B0aW9ucyB8fCB7fSk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBzZXRQbGFjZWhvbGRlcih4KSB7XHJcblx0XHRpZih0eXBlb2YgeCAhPT0gJ3N0cmluZycpIHJldHVybiBjb25zb2xlLmVycm9yKCdQbGFjZWhvbGRlciBtdXN0IGJlIGEgc3RyaW5nLicpO1xyXG5cdFx0UGxhY2Vob2xkZXIgPSB4O1xyXG5cdFx0RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2ItbWFpbi1pdGVtJykuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsUGxhY2Vob2xkZXIpO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gc2V0TXVsdGlwbGUoc3RhdGUpIHtcclxuXHRcdE11bHRpcGxlID0gKHN0YXRlKSA/IHRydWUgOiBmYWxzZTtcclxuXHRcdGlmKE11bHRpcGxlKSBpZih0eXBlb2YgU2VsZWN0ZWQgPT09ICdvYmplY3QnICYmIFNlbGVjdGVkKSBTZWxlY3RlZCA9IFtTZWxlY3RlZF07IFxyXG5cdH1cclxuXHRcclxuXHQvKiBJbnRlcmFjdGlvbnMgKi9cclxuXHRcclxuXHRmdW5jdGlvbiBzZXRPcGVuZWQoc3RhdGUpIHtcclxuXHRcdGlmKHN0YXRlID09PSB0cnVlKSB7XHJcblx0XHRcdHJlbmRlckl0ZW1zKCk7XHJcblx0XHRcdEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY2ItYWN0aXZlJyk7XHJcblx0XHRcdEl0ZW1Db250YWluZXIuc2Nyb2xsVG9wID0gMDtcclxuXHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHNldE9wZW5lZCk7XHJcblx0XHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLEFycm93TmF2aWdhdGlvbik7XHJcblx0XHRcdGZvY3VzU2VhcmNoKCk7XHJcblx0XHRcdGlzT3BlbiA9IHRydWU7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0cmVzZXRTZWFyY2goKTtcclxuXHRcdFx0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdjYi1hY3RpdmUnKTtcclxuXHRcdFx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLHNldE9wZW5lZCk7XHJcblx0XHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLEFycm93TmF2aWdhdGlvbik7XHJcblx0XHRcdFNlbGVjdGVkSW5kZXggPSBudWxsO1xyXG5cdFx0XHRpc09wZW4gPSBmYWxzZTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIEFycm93TmF2aWdhdGlvbihlKSB7XHJcblx0XHRpZihuZXcgUmVnRXhwKCczOHw0MHwxMycpLnRlc3QoZS5rZXlDb2RlKSkgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0c3dpdGNoKGUua2V5Q29kZSkge1xyXG5cdFx0XHRjYXNlIDM4OlxyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdHNlbGVjdFByZXYoKTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgNDA6XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0c2VsZWN0TmV4dCgpO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdFx0Y2FzZSAxMzpcclxuXHRcdFx0c2VsZWN0SXRlbShJdGVtc1twYXJzZUludChJdGVtQ29udGFpbmVyLmNoaWxkcmVuW1NlbGVjdGVkSW5kZXhdLmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpLDEwKV0pO1xyXG5cdFx0XHRTZWxlY3RlZEluZGV4ID0gbnVsbDtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHR9ICAgXHJcblx0fVxyXG5cclxuXHQvKiBTZWxlY3RpbmcgKi9cclxuXHJcblx0ZnVuY3Rpb24gcmVtb3ZlU2VsZWN0ZWQoaXRlbSxldmVudCkge1xyXG5cdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRTZWxlY3RlZC5zcGxpY2UoU2VsZWN0ZWQuaW5kZXhPZihpdGVtKSwxKTtcclxuXHRcdGlmKCFTZWxlY3RlZC5sZW5ndGgpIFNlbGVjdGVkID0gbnVsbDtcclxuXHJcblx0XHRpZighU2VsZWN0ZWQpIEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNiLW1haW4taXRlbScpLmNsYXNzTGlzdC5hZGQoJ2NiLXBsYWNlaG9sZGVyJyk7XHJcblxyXG5cdFx0cmVuZGVyU2VsZWN0aW9uKCk7XHJcblx0XHRyZW5kZXJJdGVtcygpO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gc2VsZWN0TmV4dCgpIHtcclxuICAgICAgICBpZihTZWxlY3RlZEluZGV4ID09PSBudWxsKSBTZWxlY3RlZEluZGV4ID0gLTE7XHJcbiAgICAgICAgbGV0IG1heCA9IEl0ZW1Db250YWluZXIuY2hpbGRyZW4ubGVuZ3RoIC0gMTtcclxuXHJcbiAgICAgICAgU2VsZWN0ZWRJbmRleCA9IChTZWxlY3RlZEluZGV4IDwgbWF4KSA/IFNlbGVjdGVkSW5kZXggKyAxIDogbWF4O1xyXG4gICAgICAgIHVwZGF0ZVNlbGVjdGlvbigpOyAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2VsZWN0UHJldigpIHtcclxuICAgICAgICBsZXQgbWF4ID0gSXRlbUNvbnRhaW5lci5jaGlsZHJlbi5sZW5ndGggLSAxO1xyXG5cclxuICAgICAgICBTZWxlY3RlZEluZGV4ID0gKCFTZWxlY3RlZEluZGV4KSA/IG51bGwgOiBTZWxlY3RlZEluZGV4IC0gMTtcclxuICAgICAgICB1cGRhdGVTZWxlY3Rpb24oKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzY3JvbGxTZWxlY3RlZEludG9WaWV3KCkge1xyXG5cdFx0aWYoIVNlbGVjdGVkSW5kZXggfHwgU2VsZWN0ZWRJbmRleCA8IDApIHJldHVybjtcclxuXHRcdGxldCBzZWxlY3RlZEl0ZW0gPSBJdGVtQ29udGFpbmVyLmNoaWxkcmVuW1NlbGVjdGVkSW5kZXhdO1xyXG5cdFx0bGV0IGNvbnRhaW5lclRvcCA9IEl0ZW1Db250YWluZXIuc2Nyb2xsVG9wO1xyXG5cdFx0bGV0IGNvbnRhaW5lckJvdHRvbSA9IEl0ZW1Db250YWluZXIuc2Nyb2xsVG9wICsgSXRlbUNvbnRhaW5lci5jbGllbnRIZWlnaHQ7XHJcblx0XHRsZXQgc2VsZWN0ZWRJdGVtVG9wID0gc2VsZWN0ZWRJdGVtLm9mZnNldFRvcDtcclxuXHRcdGxldCBzZWxlY3RlZEl0ZW1Cb3R0b20gPSBzZWxlY3RlZEl0ZW0ub2Zmc2V0VG9wICsgc2VsZWN0ZWRJdGVtLmNsaWVudEhlaWdodDsgXHJcblx0XHRpZihzZWxlY3RlZEl0ZW1Ub3AgPCBjb250YWluZXJUb3ApIEl0ZW1Db250YWluZXIuc2Nyb2xsVG9wID0gc2VsZWN0ZWRJdGVtLm9mZnNldFRvcDtcclxuXHRcdGVsc2UgaWYoc2VsZWN0ZWRJdGVtQm90dG9tID4gY29udGFpbmVyQm90dG9tKSBJdGVtQ29udGFpbmVyLnNjcm9sbFRvcCA9IHNlbGVjdGVkSXRlbUJvdHRvbSAtIEl0ZW1Db250YWluZXIuY2xpZW50SGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGlvbigpIHtcclxuICAgICAgICB2YXIgb2xkU2VsZWN0aW9uID0gSXRlbUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuY2Itc2VsZWN0ZWQnKTtcclxuICAgICAgICBpZihvbGRTZWxlY3Rpb24pIG9sZFNlbGVjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKCdjYi1zZWxlY3RlZCcpO1xyXG4gICAgICAgIGxldCBlbCA9IEl0ZW1Db250YWluZXIuY2hpbGRyZW5bU2VsZWN0ZWRJbmRleF07XHJcbiAgICAgICAgaWYoZWwpIGVsLmNsYXNzTGlzdC5hZGQoJ2NiLXNlbGVjdGVkJyk7XHJcbiAgICAgICAgc2Nyb2xsU2VsZWN0ZWRJbnRvVmlldygpO1xyXG4gICAgfSBcclxuXHJcblx0ZnVuY3Rpb24gc2VsZWN0SXRlbShpdGVtLGV2ZW50KSB7XHJcblx0XHRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYi1tYWluLWl0ZW0nKS5jbGFzc0xpc3QucmVtb3ZlKCdjYi1wbGFjZWhvbGRlcicpO1xyXG5cdFx0cmVzZXRTZWFyY2goKTtcclxuXHJcblx0XHRpZihNdWx0aXBsZSkge1xyXG5cdFx0XHRpZihTZWxlY3RlZCAmJiBTZWxlY3RlZC5pbmRleE9mKGl0ZW0pIDwgMCkgU2VsZWN0ZWQucHVzaChpdGVtKTtcclxuXHRcdFx0ZWxzZSBTZWxlY3RlZCA9IFtpdGVtXTtcclxuXHJcblx0XHRcdHJlbmRlckl0ZW1zKCk7XHJcblx0XHRcdGlmKGV2ZW50KSBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0Zm9jdXNTZWFyY2goKTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHRTZWxlY3RlZCA9IGl0ZW07XHJcblx0XHRcdHNldE9wZW5lZChmYWxzZSk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYob25TZWxlY3QpIG9uU2VsZWN0KGl0ZW0pO1xyXG5cdFx0cmVuZGVyU2VsZWN0aW9uKCk7XHJcblx0fVxyXG5cclxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAgIC8qIFNlYXJjaGluZyAqL1xyXG5cclxuICAgIGZ1bmN0aW9uIHNldFNlYXJjaChzdGF0ZSkge1xyXG5cdFx0U2VhcmNoID0gKHN0YXRlKSA/IHRydWUgOiBmYWxzZTtcclxuXHJcblx0XHRpZihTZWFyY2gpIHtcclxuXHRcdFx0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjYi1zZWFyY2gtZW5hYmxlZCcpO1xyXG5cdFx0XHRsZXQgU2VhcmNoQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuXHRcdFx0XHRTZWFyY2hCb3guY2xhc3NOYW1lID0gJ2NiLXNlYXJjaCc7XHJcblx0XHRcdFx0U2VhcmNoQm94LnNldEF0dHJpYnV0ZSgndHlwZScsJ3RleHQnKTtcclxuXHRcdFx0XHRTZWFyY2hCb3guc2V0QXR0cmlidXRlKCdzaXplJywxKTtcclxuXHRcdFx0XHRTZWFyY2hCb3guc2V0QXR0cmlidXRlKCdhdXRvY29tcGxldGUnLCdvZmYnKTtcclxuXHJcblx0XHRcdFx0U2VhcmNoQm94LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJyxmdW5jdGlvbiBLZXlVcChlKSB7XHJcblx0XHRcdFx0XHRpZihuZXcgUmVnRXhwKCczOHw0MHwxMycpLnRlc3QoZS5rZXlDb2RlKSA9PT0gZmFsc2UpIHtcclxuXHRcdFx0XHRcdFx0cmVuZGVySXRlbXMoc2VhcmNoKHRoaXMudmFsdWUpKTtcclxuXHRcdFx0XHRcdFx0U2VsZWN0ZWRJbmRleCA9IG51bGw7XHJcblx0XHRcdFx0XHRcdHNlbGVjdE5leHQoKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0U2VhcmNoQm94LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXByZXNzJyxmdW5jdGlvbiBLZXlQcmVzcygpIHtcclxuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCdzaXplJyx0aGlzLnZhbHVlLmxlbmd0aCArIDEpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2ItbWFpbi1pdGVtJykuYXBwZW5kQ2hpbGQoU2VhcmNoQm94KTtcclxuXHRcdH1lbHNlIEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnY2Itc2VhcmNoLWVuYWJsZWQnKTtcclxuXHR9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVzZXRTZWFyY2goKSB7XHJcblx0XHRpZighU2VhcmNoKSByZXR1cm47XHJcblx0XHRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYi1zZWFyY2gnKS52YWx1ZSA9ICcnO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZm9jdXNTZWFyY2goKSB7XHJcblx0XHRpZighU2VhcmNoKSByZXR1cm47XHJcblx0XHRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYi1zZWFyY2gnKS5mb2N1cygpO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gc2VhcmNoKHF1ZXJ5KSB7XHJcblx0XHRpZighcXVlcnkpIHJldHVybiBJdGVtcztcclxuXHRcdGxldCByZWdleCA9IG5ldyBSZWdFeHAocXVlcnksJ2knKTtcclxuXHJcblx0XHRyZXR1cm4gSXRlbXMuZmlsdGVyKGZ1bmN0aW9uIEZpbHRlcih4KSB7XHJcblx0XHRcdGlmKFNlYXJjaEZpZWxkcykge1xyXG5cdFx0XHRcdGxldCBzdGF0ZSA9IGZhbHNlO1xyXG5cdFx0XHRcdFNlYXJjaEZpZWxkcy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gRm9yRWFjaChmaWVsZCkge1xyXG5cdFx0XHRcdFx0bGV0IGtleXMgPSBmaWVsZC5zcGxpdCgnLicpO1xyXG5cdFx0XHRcdFx0bGV0IHZhbHVlID0ga2V5cy5yZWR1Y2UoZnVuY3Rpb24gUmVkdWNlKHZhbCxpdGVtKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiB2YWxbaXRlbV07XHJcblx0XHRcdFx0XHR9LHgpO1xyXG5cclxuXHRcdFx0XHRcdGlmKHJlZ2V4LnRlc3QodmFsdWUpKSBzdGF0ZSA9IHRydWU7XHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHRcdFx0fWVsc2VcclxuXHRcdFx0aWYodHlwZW9mIHggPT09ICdzdHJpbmcnKSByZXR1cm4gcmVnZXgudGVzdCh4KTtcclxuXHRcdFx0ZWxzZSBcclxuXHRcdFx0XHRyZXR1cm4gc2VhcmNoT2JqZWN0KHgpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0ZnVuY3Rpb24gc2VhcmNoT2JqZWN0KG9iaikge1xyXG5cdFx0XHRyZXR1cm4gT2JqZWN0LmtleXMob2JqKS5yZWR1Y2UoZnVuY3Rpb24gUmVkdWNlKHZhbCxrZXkpIHtcclxuXHRcdFx0XHRsZXQgY2hlY2sgPSBmYWxzZTtcclxuXHRcdFx0XHRpZih0eXBlb2Ygb2JqW2tleV0gPT09ICdvYmplY3QnKSBjaGVjayA9IHNlYXJjaE9iamVjdChvYmpba2V5XSk7XHJcblx0XHRcdFx0ZWxzZSBjaGVjayA9IHJlZ2V4LnRlc3Qob2JqW2tleV0pO1xyXG5cclxuXHRcdFx0XHRpZihjaGVjaykgdmFsID0gdHJ1ZTtcclxuXHJcblx0XHRcdFx0cmV0dXJuIHZhbDtcclxuXHRcdFx0fSxmYWxzZSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuXHQvKiBSZW5kZXJpbmcgKi9cclxuXHJcblx0ZnVuY3Rpb24gcmVuZGVySFRNTCgpIHsgLy9jb21tZW50XHJcblx0XHRsZXQgTWFpbkl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdFx0TWFpbkl0ZW0uY2xhc3NOYW1lID0gJ2NiLW1haW4taXRlbSBjYi1wbGFjZWhvbGRlciB0cmlnZ2VyJztcclxuXHJcblxyXG5cdFx0bGV0IENhcmV0ID0gYDxzdmcgY2xhc3M9XCJjYi1jYXJldCB0cmlnZ2VyXCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgaGVpZ2h0PVwiMjBcIiB3aWR0aD1cIjIwXCI+XHJcblx0XHRcdFx0XHRcdDxwYXRoIGNsYXNzPVwidHJpZ2dlclwiIGQ9XCJtNTA4IDEwOGMtNC00LTExLTQtMTUgMWwtMjM3IDI3MWwtMjM3LTI3MWMtNC01LTExLTUtMTUtMWMtNSA0LTUgMTAtMSAxNWwyNDUgMjgwYzIgMyA1IDQgOCA0YzMgMCA2LTEgOC00bDI0NS0yODBjNC01IDQtMTEtMS0xNXpcIj48L3BhdGg+XHJcblx0XHRcdFx0XHQ8L3N2Zz5gO1xyXG5cclxuXHRcdE1haW5JdGVtLmlubmVySFRNTCArPSBDYXJldDtcclxuXHRcdEVsZW1lbnQuYXBwZW5kQ2hpbGQoTWFpbkl0ZW0pO1xyXG5cclxuXHRcdEl0ZW1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdEl0ZW1Db250YWluZXIuY2xhc3NOYW1lID0gJ2NiLWl0ZW1zJztcclxuXHRcdEVsZW1lbnQuYXBwZW5kQ2hpbGQoSXRlbUNvbnRhaW5lcik7XHJcblx0XHRcclxuXHRcdEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNiLW1haW4taXRlbScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoZSkgPT4ge1xyXG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRzZXRPcGVuZWQoIWlzT3Blbik7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHJlbmRlclNlbGVjdGlvbigpIHtcclxuXHRcdFxyXG5cdFx0bGV0IG1haW5JdGVtID0gRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2ItbWFpbi1pdGVtJyk7XHJcblxyXG5cdFx0aWYoTXVsdGlwbGUpIHtcclxuXHRcdFx0W10uc2xpY2UuY2FsbChFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYi1tYWluLWl0ZW0gLmNiLXRhZycpKS5mb3JFYWNoKCh0KSA9PiB7XHJcblx0XHRcdFx0bWFpbkl0ZW0ucmVtb3ZlQ2hpbGQodCk7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdFx0aWYoIVNlbGVjdGVkKSByZXR1cm47XHJcblx0XHRcdFNlbGVjdGVkLmZvckVhY2goaXRlbSA9PiB7XHJcblx0XHRcdFx0bGV0IHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0XHRcdFx0dGFnLmNsYXNzTmFtZSA9ICdjYi10YWcnO1xyXG5cdFx0XHRcdFx0dGFnLmlubmVySFRNTCA9IHBhcnNlVGVtcGxhdGUoaXRlbSxUYWdUZW1wbGF0ZSB8fCBUZW1wbGF0ZSkgKyBgPHN2ZyB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIj5cclxuXHRcdFx0XHRcdFx0PHBhdGggZD1cIm0yNzEgMjU2bDIzOC0yMzhjNC00IDQtMTEgMC0xNWMtNC00LTExLTQtMTUgMGwtMjM4IDIzOGwtMjM4LTIzOGMtNC00LTExLTQtMTUgMGMtNCA0LTQgMTEgMCAxNWwyMzggMjM4bC0yMzggMjM4Yy00IDQtNCAxMSAwIDE1YzIgMiA1IDMgOCAzYzIgMCA1LTEgNy0zbDIzOC0yMzhsMjM4IDIzOGMyIDIgNSAzIDcgM2MzIDAgNi0xIDgtM2M0LTQgNC0xMSAwLTE1elwiPjwvcGF0aD5cclxuXHRcdFx0XHRcdDwvc3ZnPmA7XHJcblxyXG5cdFx0XHRcdFx0dGFnLnF1ZXJ5U2VsZWN0b3IoJ3N2ZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxyZW1vdmVTZWxlY3RlZC5iaW5kKG51bGwsaXRlbSkpO1xyXG5cclxuXHRcdFx0XHRtYWluSXRlbS5pbnNlcnRCZWZvcmUodGFnLG1haW5JdGVtLmNoaWxkcmVuW21haW5JdGVtLmNoaWxkcmVuLmxlbmd0aCAtIDFdKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRpZighU2VsZWN0ZWQpIHJldHVybjtcclxuXHRcdFx0bGV0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdFx0XHRpdGVtLmNsYXNzTmFtZSA9ICdjYi1zZWxlY3RlZC1pdGVtJztcclxuXHRcdFx0XHRpdGVtLmlubmVySFRNTCA9IHBhcnNlVGVtcGxhdGUoU2VsZWN0ZWQsU2VsZWN0ZWRUZW1wbGF0ZSB8fCBUZW1wbGF0ZSk7XHJcblx0XHRcdFxyXG5cclxuXHRcdFx0bGV0IHByZXZpb3VzSXRlbSA9IEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNiLXNlbGVjdGVkLWl0ZW0nKTtcclxuXHRcdFx0aWYocHJldmlvdXNJdGVtKSBtYWluSXRlbS5yZW1vdmVDaGlsZChwcmV2aW91c0l0ZW0pO1xyXG5cdFx0XHRtYWluSXRlbS5pbnNlcnRCZWZvcmUoaXRlbSxtYWluSXRlbS5jaGlsZHJlblttYWluSXRlbS5jaGlsZHJlbi5sZW5ndGggLSAxXSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiByZW5kZXJJdGVtcyhpdGVtcykge1xyXG5cdFx0SXRlbUNvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcclxuXHJcblx0XHRpZihDYXRlZ29yaXplKVxyXG5cdFx0XHRJdGVtcyA9IEl0ZW1zLnNvcnQoKGEsYikgPT4ge1xyXG5cdFx0XHRcdGlmKGdldFByb3BlcnR5QnlTdHJpbmcoQ2F0ZWdvcml6ZSxhKSA8IGdldFByb3BlcnR5QnlTdHJpbmcoQ2F0ZWdvcml6ZSxiKSkgcmV0dXJuIC0xO1xyXG5cdFx0XHRcdGlmKGdldFByb3BlcnR5QnlTdHJpbmcoQ2F0ZWdvcml6ZSxhKSA+IGdldFByb3BlcnR5QnlTdHJpbmcoQ2F0ZWdvcml6ZSxiKSkgcmV0dXJuIDE7XHJcblx0XHRcdFx0cmV0dXJuIDA7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHJcblx0XHRsZXQgcHJldmlvdXNJdGVtID0gbnVsbDtcclxuXHRcdEl0ZW1zLmZvckVhY2goKGl0ZW0saW5kZXgpID0+IHtcclxuXHRcdFx0aWYoaXRlbXMgJiYgaXRlbXMuaW5kZXhPZihpdGVtKSA8IDApIHJldHVybjtcclxuXHRcdFx0aWYoTXVsdGlwbGUgJiYgU2VsZWN0ZWQgJiYgU2VsZWN0ZWQuaW5kZXhPZihpdGVtKSA+IC0xIHx8ICFNdWx0aXBsZSAmJiBTZWxlY3RlZCA9PT0gaXRlbSkgcmV0dXJuO1xyXG5cdFx0XHRsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHRcdFx0b3B0aW9uLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIGluZGV4KTtcclxuXHRcdFx0XHRvcHRpb24uaW5uZXJIVE1MID0gcGFyc2VUZW1wbGF0ZShpdGVtLFRlbXBsYXRlKTtcclxuXHRcdFx0XHRvcHRpb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLHNlbGVjdEl0ZW0uYmluZChudWxsLGl0ZW0pKTtcclxuXHJcblx0XHRcdGlmKENhdGVnb3JpemUgJiYgKCFwcmV2aW91c0l0ZW0gfHwgZ2V0UHJvcGVydHlCeVN0cmluZyhDYXRlZ29yaXplLHByZXZpb3VzSXRlbSkgIT09IGdldFByb3BlcnR5QnlTdHJpbmcoQ2F0ZWdvcml6ZSxpdGVtKSkpIG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ2NhdGVnb3J5JyxnZXRQcm9wZXJ0eUJ5U3RyaW5nKENhdGVnb3JpemUsaXRlbSkpO1xyXG5cclxuXHRcdFx0cHJldmlvdXNJdGVtID0gaXRlbTtcclxuXHRcdFx0SXRlbUNvbnRhaW5lci5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBwYXJzZVRlbXBsYXRlKGRhdGEsdGVtcGxhdGUpIHtcclxuXHRcdGxldCByZSA9IC97e2RhdGFcXC4/KC4rPyk/fX0vO1xyXG5cdFx0bGV0IG07XHJcblx0XHR3aGlsZShtID0gcmUuZXhlYyh0ZW1wbGF0ZSkpIHtcclxuXHRcdFx0bGV0IHNlbGVjdG9yID0gJyc7XHJcblx0XHRcdGxldCB2YWx1ZSA9IGRhdGE7XHJcblx0XHRcdGlmKG1bMV0pIHtcclxuXHRcdFx0XHRzZWxlY3RvciA9ICcuJyArIG1bMV07XHJcblx0XHRcdFx0dmFsdWUgPSBnZXRQcm9wZXJ0eUJ5U3RyaW5nKG1bMV0sZGF0YSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxldCByZXBsYWNlID0gbmV3IFJlZ0V4cCgne3tkYXRhJyArIHNlbGVjdG9yICsgJ319Jyk7XHJcblx0XHRcdHRlbXBsYXRlID0gdGVtcGxhdGUucmVwbGFjZShyZXBsYWNlLHZhbHVlKTtcclxuXHRcdH0gXHJcblxyXG5cdFx0cmV0dXJuIHRlbXBsYXRlO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gZ2V0UHJvcGVydHlCeVN0cmluZyhzZWxlY3RvcixvYmplY3QpIHtcclxuXHRcdHJldHVybiBzZWxlY3Rvci5zcGxpdCgnLicpLnJlZHVjZSgodmFsLGl0ZW0pID0+IHtcclxuXHRcdFx0cmV0dXJuIHZhbFtpdGVtXTtcclxuXHRcdH0sb2JqZWN0KTtcclxuXHR9XHJcblxyXG5cdC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMse1xyXG5cdFx0J2VsZW1lbnQnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gRWxlbWVudCxcclxuXHRcdFx0c2V0OiAoeCkgPT4ge1xyXG5cdFx0XHRcdGlmKHR5cGVvZiB4ID09PSAnc3RyaW5nJykge1xyXG5cdFx0XHRcdFx0bGV0IGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih4KTtcclxuXHRcdFx0XHRcdGlmKGVsKSBFbGVtZW50ID0gZWw7XHJcblx0XHRcdFx0XHRlbHNlIGNvbnNvbGUuZXJyb3IoJ0VsZW1lbnQgbm90IGZvdW5kLicpO1xyXG5cdFx0XHRcdH1lbHNlIGlmKHggaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkgRWxlbWVudCA9IHg7XHJcblx0XHRcdFx0ZWxzZSBjb25zb2xlLmVycm9yKCdJbnZhbGlkIGFyZ3VtZW50Jyk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHQnaXRlbXMnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gSXRlbXMsXHJcblx0XHRcdHNldDogKHgpID0+IHtcclxuXHRcdFx0XHRpZih4IGluc3RhbmNlb2YgQXJyYXkpIEl0ZW1zID0geDtcclxuXHRcdFx0XHRlbHNlIGNvbnNvbGUuZXJyb3IoJ0l0ZW1zIG11c3QgYmUgYW4gYXJyYXkuJyk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHQnc2VhcmNoJzoge1xyXG5cdFx0XHRnZXQ6ICgpID0+IFNlYXJjaCxcclxuXHRcdFx0c2V0OiBzZXRTZWFyY2hcclxuXHRcdH0sXHJcblx0XHQncGxhY2Vob2xkZXInOiB7XHJcblx0XHRcdGdldDogKCkgPT4gUGxhY2Vob2xkZXIsXHJcblx0XHRcdHNldDogc2V0UGxhY2Vob2xkZXJcclxuXHRcdH0sXHJcblx0XHQnbXVsdGlwbGUnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gTXVsdGlwbGUsXHJcblx0XHRcdHNldDogc2V0TXVsdGlwbGVcclxuXHRcdH0sXHJcblx0XHQnc2VsZWN0ZWQnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gU2VsZWN0ZWRcclxuXHRcdH0sXHJcblx0XHQndGVtcGxhdGUnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gVGVtcGxhdGUsXHJcblx0XHRcdHNldDogKHgpID0+IHtcclxuXHRcdFx0XHRpZih0eXBlb2YgeCA9PT0gJ3N0cmluZycpIHtcclxuXHRcdFx0XHRcdFRlbXBsYXRlID0geDtcclxuXHRcdFx0XHRcdHJlbmRlckl0ZW1zKCk7XHJcblx0XHRcdFx0XHRyZW5kZXJTZWxlY3Rpb24oKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZWxzZSBjb25zb2xlLmVycm9yKCdUZW1wbGF0ZSBtdXN0IGJlIGEgc3RyaW5nLicpO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0J3RhZ3RlbXBsYXRlJzoge1xyXG5cdFx0XHRnZXQ6ICgpID0+IFRhZ1RlbXBsYXRlIHx8IFRlbXBsYXRlLFxyXG5cdFx0XHRzZXQ6ICh4KSA9PiB7XHJcblx0XHRcdFx0aWYodHlwZW9mIHggPT09ICdzdHJpbmcnKSB7XHJcblx0XHRcdFx0XHRUYWdUZW1wbGF0ZSA9IHg7XHJcblx0XHRcdFx0XHRyZW5kZXJJdGVtcygpO1xyXG5cdFx0XHRcdFx0cmVuZGVyU2VsZWN0aW9uKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0J3NlbGVjdGVkdGVtcGxhdGUnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gU2VsZWN0ZWRUZW1wbGF0ZSB8fCBUZW1wbGF0ZSxcclxuXHRcdFx0c2V0OiAoeCkgPT4ge1xyXG5cdFx0XHRcdGlmKHR5cGVvZiB4ID09PSAnc3RyaW5nJykge1xyXG5cdFx0XHRcdFx0U2VsZWN0ZWRUZW1wbGF0ZSA9IHg7XHJcblx0XHRcdFx0XHRyZW5kZXJJdGVtcygpO1xyXG5cdFx0XHRcdFx0cmVuZGVyU2VsZWN0aW9uKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0J3NlYXJjaGZpZWxkcyc6IHtcclxuXHRcdFx0Z2V0OiAoKSA9PiBTZWFyY2hGaWVsZHMsXHJcblx0XHRcdHNldDogKHgpID0+IHtcclxuXHRcdFx0XHRpZih0eXBlb2YgeCA9PT0gJ3N0cmluZycpIFNlYXJjaEZpZWxkcyA9IHg7XHJcblx0XHRcdFx0ZWxzZSBjb25zb2xlLmVycm9yKCdTZWFyY2hGaWVsZHMgbXVzdCBiZSBhIHN0cmluZy4nKTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdCdvbnNlbGVjdCc6IHtcclxuXHRcdFx0Z2V0OiAoKSA9PiBvblNlbGVjdCxcclxuXHRcdFx0c2V0OiAoeCkgPT4ge1xyXG5cdFx0XHRcdGlmKHR5cGVvZiB4ID09PSAnZnVuY3Rpb24nKSBvblNlbGVjdCA9IHg7XHJcblx0XHRcdFx0ZWxzZSBpZigheCkgb25TZWxlY3QgPSBudWxsO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0J2NhdGVnb3JpemUnOiB7XHJcblx0XHRcdGdldDogKCkgPT4gQ2F0ZWdvcml6ZSxcclxuXHRcdFx0c2V0OiAoeCkgPT4ge1xyXG5cdFx0XHRcdGlmKHR5cGVvZiB4ID09PSAnc3RyaW5nJykgQ2F0ZWdvcml6ZSA9IHg7XHJcblx0XHRcdFx0ZWxzZSBDYXRlZ29yaXplID0gbnVsbDtcclxuXHJcblx0XHRcdFx0cmVuZGVySXRlbXMoKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHR0aGlzLnNlbGVjdCA9IGZ1bmN0aW9uIFNlbGVjdChpdGVtKSB7XHJcblx0XHRsZXQgbWF0Y2ggPSBJdGVtcy5yZWR1Y2UoKG0saSkgPT4gbSA9IGlzRXF1aXZhbGVudChpdGVtLGkpID8gaSA6IG0sbnVsbCk7XHJcblx0XHRpZihtYXRjaCkgc2VsZWN0SXRlbShtYXRjaCk7XHJcblx0XHRcclxuXHRcdGZ1bmN0aW9uIGlzRXF1aXZhbGVudChhLCBiKSB7XHJcblx0XHRcdGlmKHR5cGVvZiBhICE9PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiAhPT0gJ29iamVjdCcpIHJldHVybiBhID09PSBiO1xyXG5cdFx0XHRsZXQgYVByb3BzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYSk7XHJcblx0XHRcdGxldCBiUHJvcHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhiKTtcclxuXHJcblx0XHRcdGlmIChhUHJvcHMubGVuZ3RoICE9PSBiUHJvcHMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XHJcblxyXG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGFQcm9wcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdGxldCBwcm9wTmFtZSA9IGFQcm9wc1tpXTtcclxuXHJcblx0XHRcdFx0aWYoYVtwcm9wTmFtZV0gIT09IGJbcHJvcE5hbWVdKSByZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblxyXG5cdGluaXQuY2FsbCh0aGlzKTtcclxuXHJcblx0ZnVuY3Rpb24gc2V0QXJncyhvcHRzKSB7XHJcbiAgICAgICAgZm9yKGxldCBrZXkgaW4gZGVmYXVsdHMpIHRoaXNba2V5XSA9IChvcHRzW2tleV0pID8gb3B0c1trZXldIDogZGVmYXVsdHNba2V5XSA7XHJcbiAgICB9O1xyXG5cclxuXHRyZXR1cm4gT2JqZWN0LmZyZWV6ZSh0aGlzKTtcclxuIH1cclxuXHJcblxyXG4vKiBTcHJlYWQgaXQgdG8gdGhlIHdvcmxkISAqL1xyXG4gKGZ1bmN0aW9uIEZhY3RvcnkgKGZhY3RvcnkpIHtcclxuICAgIGlmICggdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kICkgZGVmaW5lKCdDaG9vc2VCdW1wcycsIGZhY3RvcnkpO1xyXG4gICAgZWxzZSBpZiAoIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyApIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeTtcclxuICAgIGVsc2Ugd2luZG93LkNob29zZUJ1bXBzID0gZmFjdG9yeTtcclxufSkoQ2hvb3NlQnVtcHMpO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
