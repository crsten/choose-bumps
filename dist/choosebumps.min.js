"use strict";function ChooseBumps(e,t){function n(){this.element=e,E.classList.add("choosebumps"),E.setAttribute("tabindex",0),h(),y.call(this,t)}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(q=e,void E.querySelector(".cb-main-item").setAttribute("placeholder",q))}function c(e){w=!!e,w&&"object"===("undefined"==typeof C?"undefined":_typeof(C))&&C&&(C=[C])}function i(e){e===!0?(b(),E.classList.add("cb-active"),document.addEventListener("click",i),m(),x=!0,console.log("Opened")):(f(),E.classList.remove("cb-active"),document.removeEventListener("click",i),T=null,x=!1,console.log("Close"))}function o(e,t){t.stopPropagation(),C.splice(C.indexOf(e),1),C.length||(C=null),C||E.querySelector(".cb-main-item").classList.add("cb-placeholder"),v(),b()}function l(){null===T&&(T=-1);var e=L.children.length-1;T=e>T?T+1:e,a()}function s(){null===T&&(T=-1);L.children.length-1;T=0===T?null:T-1,a()}function a(){var e=L.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=L.children[T];t&&t.classList.add("cb-selected")}function u(e,t){E.querySelector(".cb-main-item").classList.remove("cb-placeholder"),f(),w?(C&&C.indexOf(e)<0?C.push(e):C=[e],b(),t&&t.stopPropagation(),m()):(C=e,i(!1)),v()}function d(e){if(S=!!e){E.classList.add("cb-search-enabled");var t=document.createElement("input");t.className="cb-search",t.setAttribute("type","text"),t.setAttribute("size",1),t.setAttribute("autocomplete","off"),t.addEventListener("keyup",function(e){new RegExp("38|40|13").test(e.keyCode)===!1&&(b(p(this.value)),T||l())}),t.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),t.addEventListener("keydown",function(e){switch(e.keyCode){case 38:e.preventDefault(),s();break;case 40:e.preventDefault(),l();break;case 13:u(j[parseInt(L.children[T].getAttribute("data-id"),10)]),T=null}}),E.querySelector(".cb-main-item").appendChild(t)}else E.classList.remove("cb-search-enabled")}function f(){S&&(E.querySelector(".cb-search").value="")}function m(){S&&E.querySelector(".cb-search").focus()}function p(e){function t(e){return Object.keys(e).reduce(function(r,c){var i=!1;return i="object"===_typeof(e[c])?t(e[c]):n.test(e[c]),i&&(r=!0),r},!1)}if(!e)return j;var n=new RegExp(e,"i");return j.filter(function(e){if(k){var r=!1;return k.split(" ").forEach(function(t){var c=t.split("."),i=c.reduce(function(e,t){return e[t]},e);n.test(i)&&(r=!0)}),r}return"string"==typeof e?n.test(e):t(e)})}function h(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512">\n						<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n					</svg>';e.innerHTML+=t,E.appendChild(e),L=document.createElement("div"),L.className="cb-items",E.appendChild(L),E.querySelector(".cb-main-item").addEventListener("click",function(e){console.log("Click: Element"),e.stopPropagation(),i(!x)})}function v(){var e=E.querySelector(".cb-main-item");if(w){if([].slice.call(E.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),!C)return;C.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=g(t,B)+'<svg viewBox="0 0 512 512">\n						<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n					</svg>',n.querySelector("svg").addEventListener("click",o.bind(null,t)),e.insertBefore(n,e.children[e.children.length-1])})}else{var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=g(C,O);var n=E.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}function b(e){L.innerHTML="",j.forEach(function(t,n){if(!(e&&e.length&&e.indexOf(t)<0||w&&C&&C.indexOf(t)>-1||!w&&C===t)){var r=document.createElement("div");r.setAttribute("data-id",n),r.innerHTML=g(t,A),r.addEventListener("click",u.bind(null,t)),L.appendChild(r)}})}function g(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var c="",i=e;if(r[1]){var o=r[1].split(".");c="."+r[1],i=o.reduce(function(e,t){return e[t]},e)}var l=new RegExp("{{data"+c+"}}");t=t.replace(l,i)}return t}function y(e){for(var t in H)this[t]=e[t]||H[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var E=null,L=null,S=!1,C=null,x=!1,k=null,q=null,w=!1,A="",B=null,O=null,T=null,j=[],H={placeholder:"Choose",items:[],search:!1,searchfields:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null};return Object.defineProperties(this,{element:{get:function(){return E},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?E=t:console.error("Element not found.")}else e instanceof HTMLElement?E=e:console.error("Invalid argument")}},items:{get:function(){return j},set:function(e){e instanceof Array?j=e:console.error("Items must be an array.")}},search:{get:function(){return S},set:d},placeholder:{get:function(){return q},set:r},multiple:{get:function(){return w},set:c},selected:{get:function(){return C}},template:{get:function(){return A},set:function(e){"string"==typeof e?A=e:console.error("Template must be a string.")}},tagtemplate:{get:function(){return B},set:function(e){B="string"==typeof e?e:A}},selectedtemplate:{get:function(){return O},set:function(e){O="string"==typeof e?e:A}},searchfields:{get:function(){return k},set:function(e){"string"==typeof e?k=e:console.error("SearchFields must be a string.")}}}),n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;base64,
