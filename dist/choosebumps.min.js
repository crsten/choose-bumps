"use strict";function ChooseBumps(e,t){function n(){this.element=e,L.classList.add("choosebumps"),L.setAttribute("tabindex",0),v(),E.call(this,t||{})}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(q=e,void L.querySelector(".cb-main-item").setAttribute("placeholder",q))}function c(e){O=!!e,O&&"object"===("undefined"==typeof C?"undefined":_typeof(C))&&C&&(C=[C])}function i(e){e===!0?(g(),L.classList.add("cb-active"),document.addEventListener("click",i),document.addEventListener("keydown",o),p(),k=!0):(m(),L.classList.remove("cb-active"),document.removeEventListener("click",i),document.removeEventListener("keydown",o),N=null,k=!1)}function o(e){switch(new RegExp("38|40|13").test(e.keyCode)&&e.preventDefault(),e.keyCode){case 38:e.preventDefault(),u();break;case 40:e.preventDefault(),s();break;case 13:f(T[parseInt(S.children[N].getAttribute("data-id"),10)]),N=null}}function l(e,t){t.stopPropagation(),C.splice(C.indexOf(e),1),C.length||(C=null),C||L.querySelector(".cb-main-item").classList.add("cb-placeholder"),b(),g()}function s(){null===N&&(N=-1);var e=S.children.length-1;N=e>N?N+1:e,a()}function u(){S.children.length-1;N=N?N-1:null,a()}function a(){var e=S.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=S.children[N];t&&t.classList.add("cb-selected")}function f(e,t){L.querySelector(".cb-main-item").classList.remove("cb-placeholder"),m(),O?(C&&C.indexOf(e)<0?C.push(e):C=[e],g(),t&&t.stopPropagation(),p()):(C=e,i(!1)),P&&P(e),b()}function d(e){if(x=!!e){L.classList.add("cb-search-enabled");var t=document.createElement("input");t.className="cb-search",t.setAttribute("type","text"),t.setAttribute("size",1),t.setAttribute("autocomplete","off"),t.addEventListener("keyup",function(e){new RegExp("38|40|13").test(e.keyCode)===!1&&(g(h(this.value)),N=null,s())}),t.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),L.querySelector(".cb-main-item").appendChild(t)}else L.classList.remove("cb-search-enabled")}function m(){x&&(L.querySelector(".cb-search").value="")}function p(){x&&L.querySelector(".cb-search").focus()}function h(e){function t(e){return Object.keys(e).reduce(function(r,c){var i=!1;return i="object"===_typeof(e[c])?t(e[c]):n.test(e[c]),i&&(r=!0),r},!1)}if(!e)return T;var n=new RegExp(e,"i");return T.filter(function(e){if(w){var r=!1;return w.split(" ").forEach(function(t){var c=t.split("."),i=c.reduce(function(e,t){return e[t]},e);n.test(i)&&(r=!0)}),r}return"string"==typeof e?n.test(e):t(e)})}function v(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512">\n						<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n					</svg>';e.innerHTML+=t,L.appendChild(e),S=document.createElement("div"),S.className="cb-items",L.appendChild(S),L.querySelector(".cb-main-item").addEventListener("click",function(e){e.stopPropagation(),i(!k)})}function b(){if(C){var e=L.querySelector(".cb-main-item");if(O)[].slice.call(L.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),C.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=y(t,A||j)+'<svg viewBox="0 0 512 512">\n						<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n					</svg>',n.querySelector("svg").addEventListener("click",l.bind(null,t)),e.insertBefore(n,e.children[e.children.length-1])});else{var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=y(C,B||j);var n=L.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}}function g(e){S.innerHTML="",T.forEach(function(t,n){if(!(e&&e.indexOf(t)<0||O&&C&&C.indexOf(t)>-1||!O&&C===t)){var r=document.createElement("div");r.setAttribute("data-id",n),r.innerHTML=y(t,j),r.addEventListener("click",f.bind(null,t)),S.appendChild(r)}})}function y(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var c="",i=e;if(r[1]){var o=r[1].split(".");c="."+r[1],i=o.reduce(function(e,t){return e[t]},e)}var l=new RegExp("{{data"+c+"}}");t=t.replace(l,i)}return t}function E(e){for(var t in H)this[t]=e[t]?e[t]:H[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var L=null,S=null,x=!1,C=null,k=!1,w=null,q=null,O=!1,j="",A=null,B=null,N=null,P=null,T=[],H={placeholder:"Choose",items:[],search:!1,searchfields:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null,onselect:null};return Object.defineProperties(this,{element:{get:function(){return L},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?L=t:console.error("Element not found.")}else e instanceof HTMLElement?L=e:console.error("Invalid argument")}},items:{get:function(){return T},set:function(e){e instanceof Array?T=e:console.error("Items must be an array.")}},search:{get:function(){return x},set:d},placeholder:{get:function(){return q},set:r},multiple:{get:function(){return O},set:c},selected:{get:function(){return C}},template:{get:function(){return j},set:function(e){"string"==typeof e?(j=e,g(),b()):console.error("Template must be a string.")}},tagtemplate:{get:function(){return A||j},set:function(e){"string"==typeof e&&(A=e,g(),b())}},selectedtemplate:{get:function(){return B||j},set:function(e){"string"==typeof e&&(B=e,g(),b())}},searchfields:{get:function(){return w},set:function(e){"string"==typeof e?w=e:console.error("SearchFields must be a string.")}},onselect:{get:function(){return P},set:function(e){"function"==typeof e?P=e:e||(P=null)}}}),this.select=function(e){function t(e,t){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))&&"object"!==("undefined"==typeof t?"undefined":_typeof(t)))return e===t;var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var c=0;c<n.length;c++){var i=n[c];if(e[i]!==t[i])return!1}return!0}var n=T.reduce(function(n,r){return n=t(e,r)?r:n},null);n&&f(n)},n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;base64,
