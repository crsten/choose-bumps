"use strict";function ChooseBumps(e,t){function n(){this.element=e,k.classList.add("choosebumps"),k.setAttribute("tabindex",0),k.getAttribute("placeholder")&&(W.placeholder=k.getAttribute("placeholder")),y(),C.call(this,t||{})}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(H=e,void k.querySelector(".cb-main-item").setAttribute("placeholder",H))}function c(e){z=!!e,z&&"object"===("undefined"==typeof N?"undefined":_typeof(N))&&N&&(N=[N])}function i(e){e===!0?(L(),k.classList.add("cb-active"),w.scrollTop=0,document.addEventListener("click",i),document.addEventListener("keydown",o),h(),j=!0):(m(),k.classList.remove("cb-active"),document.removeEventListener("click",i),document.removeEventListener("keydown",o),D=null,j=!1)}function o(e){switch(new RegExp("38|40|13").test(e.keyCode)&&e.preventDefault(),e.keyCode){case 38:e.preventDefault(),s();break;case 40:e.preventDefault(),u();break;case 13:if("function"==typeof F&&D===-1)return F(e.target.value),e.target.value="";if(D<0)return;d(V[parseInt(w.children[D].getAttribute("data-id"),10)],!0),D=null}}function l(e,t,n){n&&n.stopPropagation(),N&&N.constructor===Array?(N.splice(N.indexOf(e),1),N.length||(N=null)):N=null,N||k.querySelector(".cb-main-item").classList.add("cb-placeholder"),G&&t&&G(e),v(),L()}function u(){null===D&&(D=-1);var e=w.children.length-1;D=D<e?D+1:e,f()}function s(){w.children.length-1;D=D?D-1:null,f()}function a(){if(D&&!(D<0)){var e=w.children[D],t=w.scrollTop,n=w.scrollTop+w.clientHeight,r=e.offsetTop,c=e.offsetTop+e.clientHeight;r<t?w.scrollTop=e.offsetTop:c>n&&(w.scrollTop=c-w.clientHeight)}}function f(){var e=w.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=w.children[D];t&&t.classList.add("cb-selected"),a()}function d(e,t,n){k.querySelector(".cb-main-item").classList.remove("cb-placeholder"),m(),z?(N&&N.indexOf(e)<0?N.push(e):N=[e],L(),n&&n.stopPropagation(),h()):(N=e,i(!1)),I&&t&&I(e),v()}function p(e){O=!!e,O?!function(){k.classList.add("cb-search-enabled");var e=document.createElement("input");e.className="cb-search",e.setAttribute("type","text"),e.setAttribute("size",1),e.setAttribute("autocomplete","off"),e.addEventListener("keyup",function(t){new RegExp("38|40|13").test(t.keyCode)===!1&&this.value.length>=Q&&(U&&clearTimeout(U),U=setTimeout(function(){g(e.value,function(e){/{{.*}}/gi.test(K)&&(V=e),L(e),D=null,u()})},200))}),e.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),k.querySelector(".cb-main-item").appendChild(e)}():k.classList.remove("cb-search-enabled")}function m(){O&&(k.querySelector(".cb-search").value="")}function h(){O&&k.querySelector(".cb-search").focus()}function g(e,t){function n(e){return Object.keys(e).reduce(function(t,c){var i=!1;return i="object"===_typeof(e[c])?n(e[c]):r.test(e[c]),i&&(t=!0),t},!1)}if(!e)return V;var r=new RegExp(e,"i");/{{.*}}/gi.test(K)?b(K.replace(/{{query}}/,e),t):t(V.filter(function(e){if(B){var t=!1;return B.split(" ").forEach(function(n){var c=n.split("."),i=c.reduce(function(e,t){return e[t]},e);r.test(i)&&(t=!0)}),t}return"string"==typeof e?r.test(e):n(e)}))}function y(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512" height="20" width="20">\n\t\t\t\t\t\t<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n\t\t\t\t\t</svg>';e.innerHTML+=t,k.appendChild(e),w=document.createElement("div"),w.className="cb-items",k.appendChild(w),A=document.createElement("div"),A.className="cb-loader",k.appendChild(A),k.querySelector(".cb-main-item").addEventListener("click",function(e){e.stopPropagation(),i(!j)})}function v(){var e=k.querySelector(".cb-main-item");if(z){if([].slice.call(k.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),!N)return;N.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=S(t,R||P)+'<svg viewBox="0 0 512 512">\n\t\t\t\t\t\t<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n\t\t\t\t\t</svg>',n.querySelector("svg").addEventListener("click",l.bind(null,t,!0)),e.insertBefore(n,e.children[e.children.length-1])})}else{if(!N)return[].slice.call(e.querySelectorAll(".cb-selected-item,.cb-tag")).forEach(function(t){return e.removeChild(t)});var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=S(N,_||P);var n=k.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}function b(e,t){X&&(X.abort(),E(!1)),X=new XMLHttpRequest,X.open("GET",e),X.onreadystatechange=function(){4==this.readyState&&(E(!1),this.status>=200&&this.status<400&&(t(J?J(JSON.parse(this.responseText)):JSON.parse(this.responseText)),X=null))},X.send(),E(!0)}function E(e){e?(A.style.display="block",k.querySelector(".cb-caret").style.display="none"):(A.style.display="",k.querySelector(".cb-caret").style.display="")}function L(e){w.innerHTML="",M&&(V=V.sort(function(e,t){return T(M,e)<T(M,t)?-1:T(M,e)>T(M,t)?1:0}));var t=null;V.forEach(function(n,r){if(!(e&&e.indexOf(n)<0||z&&N&&N.indexOf(n)>-1||!z&&N===n)){var c=document.createElement("div");c.setAttribute("data-id",r),c.innerHTML=S(n,P),c.addEventListener("click",d.bind(null,n,!0)),!M||t&&T(M,t)===T(M,n)||c.setAttribute("category",T(M,n)),t=n,w.appendChild(c)}})}function S(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var c="",i=e;r[1]&&(c="."+r[1],i=T(r[1],e));var o=new RegExp("{{data"+c+"}}");t=t.replace(o,i)}return t}function T(e,t){return e.split(".").reduce(function(e,t){return e[t]},t)}function q(e,t){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))&&"object"!==("undefined"==typeof t?"undefined":_typeof(t)))return e===t;var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var c=0;c<n.length;c++){var i=n[c];if(e[i]!==t[i])return!1}return!0}function x(){if(N&&N.constructor===Array){var e=N.slice();e.forEach(function(e){l(e,!0)})}else l(N,!0);m()}function C(e){for(var t in W)this[t]=e[t]?e[t]:W[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var k=null,w=null,A=null,O=!1,N=null,j=!1,B=null,H=null,z=!1,M=null,P="",R=null,_=null,D=null,I=null,J=null,F=null,G=null,U=null,X=null,K=null,Q=0,V=[],W={placeholder:"Choose",items:[],search:!1,searchfields:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null,categorize:null,processing:null,minlength:null,onselect:null,onremove:null,onadd:null};return Object.defineProperties(this,{element:{get:function(){return k},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?k=t:console.error("Element not found.")}else e instanceof HTMLElement?k=e:console.error("Invalid argument")}},items:{get:function(){return K||V},set:function(e){e instanceof Array?V=e:"string"==typeof e?(K=e,/{{.*}}/gi.test(K)||b(K,function(e){V=e})):console.error("Items must be an array or URL.")}},minlength:{get:function(){return Q},set:function(e){Q=isNaN(e)?0:e}},search:{get:function(){return O},set:p},placeholder:{get:function(){return H},set:r},multiple:{get:function(){return z},set:c},selected:{get:function(){return N}},template:{get:function(){return P},set:function(e){"string"==typeof e?(P=e,L(),v()):console.error("Template must be a string.")}},tagtemplate:{get:function(){return R||P},set:function(e){"string"==typeof e&&(R=e,L(),v())}},selectedtemplate:{get:function(){return _||P},set:function(e){"string"==typeof e&&(_=e,L(),v())}},searchfields:{get:function(){return B},set:function(e){"string"==typeof e?B=e:console.error("SearchFields must be a string.")}},onselect:{get:function(){return I},set:function(e){"function"==typeof e?I=e:e||(I=null)}},processing:{get:function(){return J},set:function(e){"function"==typeof e?J=e:e||(J=null)}},onremove:{get:function(){return G},set:function(e){"function"==typeof e?G=e:e||(G=null)}},onadd:{get:function(){return F},set:function(e){"function"==typeof e?F=e:e||(F=null)}},categorize:{get:function(){return M},set:function(e){M="string"==typeof e?e:null,L()}}}),this.select=function(e){if(!e)return x();var t=V.reduce(function(t,n){return t=q(e,n)?n:t},null);t&&d(t)},this.remove=function(e){if(!e)return x();var t=V.reduce(function(t,n){return t=q(e,n)?n:t},null);t&&l(t,!0)},this.reset=x,n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
