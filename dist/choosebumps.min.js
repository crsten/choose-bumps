"use strict";function ChooseBumps(e,t){function n(){this.element=e,x.classList.add("choosebumps"),x.setAttribute("tabindex",0),x.getAttribute("placeholder")&&($.placeholder=x.getAttribute("placeholder")),v(),q.call(this,t||{})}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(z=e,void x.querySelector(".cb-main-item").setAttribute("placeholder",z))}function o(e){P=!!e,P&&"object"===("undefined"==typeof j?"undefined":_typeof(j))&&j&&(j=[j])}function c(e){e="boolean"==typeof e?e:!B,e===!0?(S(),x.classList.add("cb-active"),w.scrollTop=0,document.addEventListener("click",c),document.addEventListener("keydown",l),document.addEventListener("keyup",i),g(),B=!0):(h(),x.classList.remove("cb-active"),document.removeEventListener("click",c),document.removeEventListener("keydown",l),document.removeEventListener("keyup",i),J=null,B=!1)}function i(e){27===e.keyCode&&c(!1)}function l(e){switch(new RegExp("38|40|13").test(e.keyCode)&&e.preventDefault(),e.keyCode){case 38:e.preventDefault(),a();break;case 40:e.preventDefault(),s();break;case 13:if("function"==typeof U&&J===-1)return U(e.target.value),e.target.value="";if(void 0===J||null===J||J<0)return c();p(Z[parseInt(w.children[J].getAttribute("data-id"),10)],!0),J=null}}function u(e,t,n){n&&n.stopPropagation(),j&&j.constructor===Array?(j.splice(j.indexOf(e),1),j.length||(j=null)):j=null,j||x.querySelector(".cb-main-item").classList.add("cb-placeholder"),X&&t&&X(e),b(),S()}function s(){null===J&&(J=-1);var e=w.children.length-1;J=J<e?J+1:e,d()}function a(){w.children.length-1;J=J?J-1:null,d()}function f(){if(J&&!(J<0)){var e=w.children[J],t=w.scrollTop,n=w.scrollTop+w.clientHeight,r=e.offsetTop,o=e.offsetTop+e.clientHeight;r<t?w.scrollTop=e.offsetTop:o>n&&(w.scrollTop=o-w.clientHeight)}}function d(){var e=w.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=w.children[J];t&&t.classList.add("cb-selected"),f()}function p(e,t,n){x.querySelector(".cb-main-item").classList.remove("cb-placeholder"),h(),P?(j&&j.reduce(function(t,n){return t||T(e,n)},!1)||(j?j.push(e):j=[e]),S(),n&&n.stopPropagation(),g()):(j=e,c(!1)),F&&t&&F(e),b()}function m(e){O=!!e,O?!function(){x.classList.add("cb-search-enabled");var e=document.createElement("input");e.className="cb-search",e.setAttribute("type","text"),e.setAttribute("size",1),e.setAttribute("autocomplete","off"),e.addEventListener("keyup",function(t){w.removeAttribute("no-results-text"),new RegExp("38|40|13").test(t.keyCode)===!1&&this.value.length>=Y&&(K&&clearTimeout(K),K=setTimeout(function(){y(e.value,function(t){/{{.*}}/gi.test(V)&&(Z=t),W&&(Z=t),!Z.length&&M&&w.setAttribute("no-results-text",M.replace("{{query}}",e.value)),S(t),J=null,s()})},200))}),e.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),x.querySelector(".cb-main-item").appendChild(e)}():x.classList.remove("cb-search-enabled")}function h(){O&&(x.querySelector(".cb-search").value="")}function g(){O&&x.querySelector(".cb-search").focus()}function y(e,t){function n(e){return Object.keys(e).reduce(function(t,o){var c=!1;return c="object"===_typeof(e[o])?n(e[o]):r.test(e[o]),c&&(t=!0),t},!1)}if(!e)return Z;var r=new RegExp(e,"i");/{{.*}}/gi.test(V)?E(V.replace(/{{query}}/,e),t):W?(L(!0),W(e,function(e){t(G?G(e):e),L(!1)})):t(Z.filter(function(e){if(H){var t=!1;return H.split(" ").forEach(function(n){var o=n.split("."),c=o.reduce(function(e,t){return e[t]},e);r.test(c)&&(t=!0)}),t}return"string"==typeof e?r.test(e):n(e)}))}function v(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512" height="20" width="20">\n\t\t\t\t\t\t<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n\t\t\t\t\t</svg>';e.innerHTML+=t,x.appendChild(e),w=document.createElement("div"),w.className="cb-items",x.appendChild(w),N=document.createElement("div"),N.className="cb-loader",x.appendChild(N),e.addEventListener("click",function(e){e.stopPropagation(),c(!B)}),x.addEventListener("keypress",function(e){13===e.keyCode&&c()})}function b(){var e=x.querySelector(".cb-main-item");if(P){if([].slice.call(x.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),!j)return;j.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=k(t,D||_)+'<svg viewBox="0 0 512 512">\n\t\t\t\t\t\t<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n\t\t\t\t\t</svg>',n.querySelector("svg").addEventListener("click",u.bind(null,t,!0)),e.insertBefore(n,e.children[e.children.length-1])})}else{if(!j)return[].slice.call(e.querySelectorAll(".cb-selected-item,.cb-tag")).forEach(function(t){return e.removeChild(t)});var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=k(j,I||_);var n=x.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}function E(e,t){Q&&(Q.abort(),L(!1)),Q=new XMLHttpRequest,Q.open("GET",e),Q.onreadystatechange=function(){4==this.readyState&&(L(!1),this.status>=200&&this.status<400?(t(G?G(JSON.parse(this.responseText)):JSON.parse(this.responseText)),Q=null):(t([]),Q=null))},Q.send(),L(!0)}function L(e){e?(N.style.display="block",x.querySelector(".cb-caret").style.display="none"):(N.style.display="",x.querySelector(".cb-caret").style.display="")}function S(e){w.innerHTML="",R&&(Z=Z.sort(function(e,t){return C(R,e)<C(R,t)?-1:C(R,e)>C(R,t)?1:0}));var t=null;Z.forEach(function(n,r){if(!(e&&e.indexOf(n)<0||P&&j&&j.reduce(function(e,t){return e||T(n,t)},!1)||!P&&j===n)){var o=document.createElement("div");o.setAttribute("data-id",r),o.innerHTML=k(n,_),o.addEventListener("click",p.bind(null,n,!0)),!R||t&&C(R,t)===C(R,n)||o.setAttribute("category",C(R,n)),t=n,w.appendChild(o)}})}function k(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var o="",c=e;r[1]&&(o="."+r[1],c=C(r[1],e));var i=new RegExp("{{data"+o+"}}");t=t.replace(i,c)}return t}function C(e,t){return e.split(".").reduce(function(e,t){return e[t]},t)}function T(e,t){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))&&"object"!==("undefined"==typeof t?"undefined":_typeof(t)))return e===t;var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++){var c=n[o];if(e[c]!==t[c])return!1}return!0}function A(){if(j&&j.constructor===Array){var e=j.slice();e.forEach(function(e){u(e,!0)})}else u(j,!0);h()}function q(e){for(var t in $)this[t]=e[t]?e[t]:$[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var x=null,w=null,N=null,O=!1,j=null,B=!1,H=null,z=null,M=null,P=!1,R=null,_="",D=null,I=null,J=null,F=null,G=null,U=null,X=null,K=null,Q=null,V=null,W=null,Y=0,Z=[],$={placeholder:"Choose",items:[],search:!1,searchfields:"",noresults:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null,categorize:null,processing:null,minlength:null,onselect:null,onremove:null,onadd:null};return Object.defineProperties(this,{element:{get:function(){return x},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?x=t:console.error("Element not found.")}else e instanceof HTMLElement?x=e:console.error("Invalid argument")}},items:{get:function(){return V||W||Z},set:function(e){e instanceof Array?Z=e:"string"==typeof e?(V=e,/{{.*}}/gi.test(V)||E(V,function(e){Z=e})):"function"==typeof e?(W=e,L(!0),W(null,function(e){Z=e instanceof Array?G?G(e):e:[],L(!1)})):console.error("Items must be an array or URL.")}},minlength:{get:function(){return Y},set:function(e){Y=isNaN(e)?0:e}},search:{get:function(){return O},set:m},placeholder:{get:function(){return z},set:r},noresults:{get:function(){return M},set:function(e){M="string"==typeof e?e:null}},multiple:{get:function(){return P},set:o},selected:{get:function(){return j}},template:{get:function(){return _},set:function(e){"string"==typeof e?(_=e,S(),b()):console.error("Template must be a string.")}},tagtemplate:{get:function(){return D||_},set:function(e){"string"==typeof e&&(D=e,S(),b())}},selectedtemplate:{get:function(){return I||_},set:function(e){"string"==typeof e&&(I=e,S(),b())}},searchfields:{get:function(){return H},set:function(e){"string"==typeof e?H=e:console.error("SearchFields must be a string.")}},onselect:{get:function(){return F},set:function(e){"function"==typeof e?F=e:e||(F=null)}},processing:{get:function(){return G},set:function(e){"function"==typeof e?G=e:e||(G=null)}},onremove:{get:function(){return X},set:function(e){"function"==typeof e?X=e:e||(X=null)}},onadd:{get:function(){return U},set:function(e){"function"==typeof e?U=e:e||(U=null)}},categorize:{get:function(){return R},set:function(e){R="string"==typeof e?e:null,S()}}}),this.select=function(e){if(!e)return A();V&&/{{.*}}/gi.test(V)&&(Z=[e]);var t=Z.length?Z.reduce(function(t,n){return t=T(e,n)?n:t},null):e;t&&p(t)},this.remove=function(e){if(!e)return A();var t=Z.reduce(function(t,n){return t=T(e,n)?n:t},null);t&&u(t,!0)},this.reset=A,n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
