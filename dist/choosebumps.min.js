"use strict";function ChooseBumps(e,t){function n(){this.element=e,x.classList.add("choosebumps"),x.setAttribute("tabindex",0),g(),S.call(this,t||{})}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(A=e,void x.querySelector(".cb-main-item").setAttribute("placeholder",A))}function c(e){O=!!e,O&&"object"===("undefined"==typeof w?"undefined":_typeof(w))&&w&&(w=[w])}function o(e){e===!0?(y(),x.classList.add("cb-active"),C.scrollTop=0,document.addEventListener("click",o),document.addEventListener("keydown",i),h(),T=!0):(m(),x.classList.remove("cb-active"),document.removeEventListener("click",o),document.removeEventListener("keydown",i),N=null,T=!1)}function i(e){switch(new RegExp("38|40|13").test(e.keyCode)&&e.preventDefault(),e.keyCode){case 38:e.preventDefault(),s();break;case 40:e.preventDefault(),u();break;case 13:if("function"==typeof M&&-1===N)return M(e.target.value),e.target.value="";if(0>N)return;d(R[parseInt(C.children[N].getAttribute("data-id"),10)],!0),N=null}}function l(e,t,n){n.stopPropagation(),w.splice(w.indexOf(e),1),w.length||(w=null),w||x.querySelector(".cb-main-item").classList.add("cb-placeholder"),_&&t&&_(e),b(),y()}function u(){null===N&&(N=-1);var e=C.children.length-1;N=e>N?N+1:e,f()}function s(){C.children.length-1;N=N?N-1:null,f()}function a(){if(N&&!(0>N)){var e=C.children[N],t=C.scrollTop,n=C.scrollTop+C.clientHeight,r=e.offsetTop,c=e.offsetTop+e.clientHeight;t>r?C.scrollTop=e.offsetTop:c>n&&(C.scrollTop=c-C.clientHeight)}}function f(){var e=C.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=C.children[N];t&&t.classList.add("cb-selected"),a()}function d(e,t,n){x.querySelector(".cb-main-item").classList.remove("cb-placeholder"),m(),O?(w&&w.indexOf(e)<0?w.push(e):w=[e],y(),n&&n.stopPropagation(),h()):(w=e,o(!1)),P&&t&&P(e),b()}function p(e){if(k=!!e){x.classList.add("cb-search-enabled");var t=document.createElement("input");t.className="cb-search",t.setAttribute("type","text"),t.setAttribute("size",1),t.setAttribute("autocomplete","off"),t.addEventListener("keyup",function(e){new RegExp("38|40|13").test(e.keyCode)===!1&&(y(v(this.value)),N=null,u())}),t.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),x.querySelector(".cb-main-item").appendChild(t)}else x.classList.remove("cb-search-enabled")}function m(){k&&(x.querySelector(".cb-search").value="")}function h(){k&&x.querySelector(".cb-search").focus()}function v(e){function t(e){return Object.keys(e).reduce(function(r,c){var o=!1;return o="object"===_typeof(e[c])?t(e[c]):n.test(e[c]),o&&(r=!0),r},!1)}if(!e)return R;var n=new RegExp(e,"i");return R.filter(function(e){if(q){var r=!1;return q.split(" ").forEach(function(t){var c=t.split("."),o=c.reduce(function(e,t){return e[t]},e);n.test(o)&&(r=!0)}),r}return"string"==typeof e?n.test(e):t(e)})}function g(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512" height="20" width="20">\n						<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n					</svg>';e.innerHTML+=t,x.appendChild(e),C=document.createElement("div"),C.className="cb-items",x.appendChild(C),x.querySelector(".cb-main-item").addEventListener("click",function(e){e.stopPropagation(),o(!T)})}function b(){var e=x.querySelector(".cb-main-item");if(O){if([].slice.call(x.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),!w)return;w.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=E(t,H||B)+'<svg viewBox="0 0 512 512">\n						<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n					</svg>',n.querySelector("svg").addEventListener("click",l.bind(null,t,!0)),e.insertBefore(n,e.children[e.children.length-1])})}else{if(!w)return;var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=E(w,z||B);var n=x.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}function y(e){C.innerHTML="",j&&(R=R.sort(function(e,t){return L(j,e)<L(j,t)?-1:L(j,e)>L(j,t)?1:0}));var t=null;R.forEach(function(n,r){if(!(e&&e.indexOf(n)<0||O&&w&&w.indexOf(n)>-1||!O&&w===n)){var c=document.createElement("div");c.setAttribute("data-id",r),c.innerHTML=E(n,B),c.addEventListener("click",d.bind(null,n,!0)),!j||t&&L(j,t)===L(j,n)||c.setAttribute("category",L(j,n)),t=n,C.appendChild(c)}})}function E(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var c="",o=e;r[1]&&(c="."+r[1],o=L(r[1],e));var i=new RegExp("{{data"+c+"}}");t=t.replace(i,o)}return t}function L(e,t){return e.split(".").reduce(function(e,t){return e[t]},t)}function S(e){for(var t in D)this[t]=e[t]?e[t]:D[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var x=null,C=null,k=!1,w=null,T=!1,q=null,A=null,O=!1,j=null,B="",H=null,z=null,N=null,P=null,M=null,_=null,R=[],D={placeholder:"Choose",items:[],search:!1,searchfields:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null,categorize:null,onselect:null,onremove:null,onadd:null};return Object.defineProperties(this,{element:{get:function(){return x},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?x=t:console.error("Element not found.")}else e instanceof HTMLElement?x=e:console.error("Invalid argument")}},items:{get:function(){return R},set:function(e){e instanceof Array?R=e:console.error("Items must be an array.")}},search:{get:function(){return k},set:p},placeholder:{get:function(){return A},set:r},multiple:{get:function(){return O},set:c},selected:{get:function(){return w}},template:{get:function(){return B},set:function(e){"string"==typeof e?(B=e,y(),b()):console.error("Template must be a string.")}},tagtemplate:{get:function(){return H||B},set:function(e){"string"==typeof e&&(H=e,y(),b())}},selectedtemplate:{get:function(){return z||B},set:function(e){"string"==typeof e&&(z=e,y(),b())}},searchfields:{get:function(){return q},set:function(e){"string"==typeof e?q=e:console.error("SearchFields must be a string.")}},onselect:{get:function(){return P},set:function(e){"function"==typeof e?P=e:e||(P=null)}},onremove:{get:function(){return _},set:function(e){"function"==typeof e?_=e:e||(_=null)}},onadd:{get:function(){return M},set:function(e){"function"==typeof e?M=e:e||(M=null)}},categorize:{get:function(){return j},set:function(e){j="string"==typeof e?e:null,y()}}}),this.select=function(e){function t(e,t){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))&&"object"!==("undefined"==typeof t?"undefined":_typeof(t)))return e===t;var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var c=0;c<n.length;c++){var o=n[c];if(e[o]!==t[o])return!1}return!0}var n=R.reduce(function(n,r){return n=t(e,r)?r:n},null);n&&d(n)},n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;base64,
