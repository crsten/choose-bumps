"use strict";function ChooseBumps(e,t){function n(){this.element=e,S.classList.add("choosebumps"),S.setAttribute("tabindex",0),b(),L.call(this,t||{})}function r(e){return"string"!=typeof e?console.error("Placeholder must be a string."):(q=e,void S.querySelector(".cb-main-item").setAttribute("placeholder",q))}function c(e){O=!!e,O&&"object"===("undefined"==typeof k?"undefined":_typeof(k))&&k&&(k=[k])}function i(e){e===!0?(y(),S.classList.add("cb-active"),x.scrollTop=0,document.addEventListener("click",i),document.addEventListener("keydown",o),h(),w=!0):(m(),S.classList.remove("cb-active"),document.removeEventListener("click",i),document.removeEventListener("keydown",o),H=null,w=!1)}function o(e){switch(new RegExp("38|40|13").test(e.keyCode)&&e.preventDefault(),e.keyCode){case 38:e.preventDefault(),u();break;case 40:e.preventDefault(),s();break;case 13:d(P[parseInt(x.children[H].getAttribute("data-id"),10)]),H=null}}function l(e,t){t.stopPropagation(),k.splice(k.indexOf(e),1),k.length||(k=null),k||S.querySelector(".cb-main-item").classList.add("cb-placeholder"),g(),y()}function s(){null===H&&(H=-1);var e=x.children.length-1;H=e>H?H+1:e,f()}function u(){x.children.length-1;H=H?H-1:null,f()}function a(){if(H&&!(0>H)){var e=x.children[H],t=x.scrollTop,n=x.scrollTop+x.clientHeight,r=e.offsetTop,c=e.offsetTop+e.clientHeight;t>r?x.scrollTop=e.offsetTop:c>n&&(x.scrollTop=c-x.clientHeight)}}function f(){var e=x.querySelector(".cb-selected");e&&e.classList.remove("cb-selected");var t=x.children[H];t&&t.classList.add("cb-selected"),a()}function d(e,t){S.querySelector(".cb-main-item").classList.remove("cb-placeholder"),m(),O?(k&&k.indexOf(e)<0?k.push(e):k=[e],y(),t&&t.stopPropagation(),h()):(k=e,i(!1)),N&&N(e),g()}function p(e){if(C=!!e){S.classList.add("cb-search-enabled");var t=document.createElement("input");t.className="cb-search",t.setAttribute("type","text"),t.setAttribute("size",1),t.setAttribute("autocomplete","off"),t.addEventListener("keyup",function(e){new RegExp("38|40|13").test(e.keyCode)===!1&&(y(v(this.value)),H=null,s())}),t.addEventListener("keypress",function(){this.setAttribute("size",this.value.length+1)}),S.querySelector(".cb-main-item").appendChild(t)}else S.classList.remove("cb-search-enabled")}function m(){C&&(S.querySelector(".cb-search").value="")}function h(){C&&S.querySelector(".cb-search").focus()}function v(e){function t(e){return Object.keys(e).reduce(function(r,c){var i=!1;return i="object"===_typeof(e[c])?t(e[c]):n.test(e[c]),i&&(r=!0),r},!1)}if(!e)return P;var n=new RegExp(e,"i");return P.filter(function(e){if(T){var r=!1;return T.split(" ").forEach(function(t){var c=t.split("."),i=c.reduce(function(e,t){return e[t]},e);n.test(i)&&(r=!0)}),r}return"string"==typeof e?n.test(e):t(e)})}function b(){var e=document.createElement("div");e.className="cb-main-item cb-placeholder trigger";var t='<svg class="cb-caret trigger" viewBox="0 0 512 512" height="20" width="20">\n						<path class="trigger" d="m508 108c-4-4-11-4-15 1l-237 271l-237-271c-4-5-11-5-15-1c-5 4-5 10-1 15l245 280c2 3 5 4 8 4c3 0 6-1 8-4l245-280c4-5 4-11-1-15z"></path>\n					</svg>';e.innerHTML+=t,S.appendChild(e),x=document.createElement("div"),x.className="cb-items",S.appendChild(x),S.querySelector(".cb-main-item").addEventListener("click",function(e){e.stopPropagation(),i(!w)})}function g(){var e=S.querySelector(".cb-main-item");if(O){if([].slice.call(S.querySelectorAll(".cb-main-item .cb-tag")).forEach(function(t){e.removeChild(t)}),!k)return;k.forEach(function(t){var n=document.createElement("div");n.className="cb-tag",n.innerHTML=E(t,A||j)+'<svg viewBox="0 0 512 512">\n						<path d="m271 256l238-238c4-4 4-11 0-15c-4-4-11-4-15 0l-238 238l-238-238c-4-4-11-4-15 0c-4 4-4 11 0 15l238 238l-238 238c-4 4-4 11 0 15c2 2 5 3 8 3c2 0 5-1 7-3l238-238l238 238c2 2 5 3 7 3c3 0 6-1 8-3c4-4 4-11 0-15z"></path>\n					</svg>',n.querySelector("svg").addEventListener("click",l.bind(null,t)),e.insertBefore(n,e.children[e.children.length-1])})}else{if(!k)return;var t=document.createElement("div");t.className="cb-selected-item",t.innerHTML=E(k,B||j);var n=S.querySelector(".cb-selected-item");n&&e.removeChild(n),e.insertBefore(t,e.children[e.children.length-1])}}function y(e){x.innerHTML="",P.forEach(function(t,n){if(!(e&&e.indexOf(t)<0||O&&k&&k.indexOf(t)>-1||!O&&k===t)){var r=document.createElement("div");r.setAttribute("data-id",n),r.innerHTML=E(t,j),r.addEventListener("click",d.bind(null,t)),x.appendChild(r)}})}function E(e,t){for(var n=/{{data\.?(.+?)?}}/,r=void 0;r=n.exec(t);){var c="",i=e;if(r[1]){var o=r[1].split(".");c="."+r[1],i=o.reduce(function(e,t){return e[t]},e)}var l=new RegExp("{{data"+c+"}}");t=t.replace(l,i)}return t}function L(e){for(var t in M)this[t]=e[t]?e[t]:M[t]}if(this instanceof ChooseBumps==!1)return new ChooseBumps(e,t);var S=null,x=null,C=!1,k=null,w=!1,T=null,q=null,O=!1,j="",A=null,B=null,H=null,N=null,P=[],M={placeholder:"Choose",items:[],search:!1,searchfields:"",multiple:!1,template:"{{data}}",tagtemplate:null,selectedtemplate:null,onselect:null};return Object.defineProperties(this,{element:{get:function(){return S},set:function(e){if("string"==typeof e){var t=document.querySelector(e);t?S=t:console.error("Element not found.")}else e instanceof HTMLElement?S=e:console.error("Invalid argument")}},items:{get:function(){return P},set:function(e){e instanceof Array?P=e:console.error("Items must be an array.")}},search:{get:function(){return C},set:p},placeholder:{get:function(){return q},set:r},multiple:{get:function(){return O},set:c},selected:{get:function(){return k}},template:{get:function(){return j},set:function(e){"string"==typeof e?(j=e,y(),g()):console.error("Template must be a string.")}},tagtemplate:{get:function(){return A||j},set:function(e){"string"==typeof e&&(A=e,y(),g())}},selectedtemplate:{get:function(){return B||j},set:function(e){"string"==typeof e&&(B=e,y(),g())}},searchfields:{get:function(){return T},set:function(e){"string"==typeof e?T=e:console.error("SearchFields must be a string.")}},onselect:{get:function(){return N},set:function(e){"function"==typeof e?N=e:e||(N=null)}}}),this.select=function(e){function t(e,t){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))&&"object"!==("undefined"==typeof t?"undefined":_typeof(t)))return e===t;var n=Object.getOwnPropertyNames(e),r=Object.getOwnPropertyNames(t);if(n.length!==r.length)return!1;for(var c=0;c<n.length;c++){var i=n[c];if(e[i]!==t[i])return!1}return!0}var n=P.reduce(function(n,r){return n=t(e,r)?r:n},null);n&&d(n)},n.call(this),Object.freeze(this)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e){"function"==typeof define&&define.amd?define("ChooseBumps",e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=e:window.ChooseBumps=e}(ChooseBumps);
//# sourceMappingURL=data:application/json;base64,
